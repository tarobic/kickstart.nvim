on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: k
on_key: <CR>
on_key: <CR>
on_key: >
BufNew(13)
BufEnter(13)
  new Mode(n:13)
Trigger(add) Mode(n:13) ' " ` z= g` g' z <C-W> [ <Space> g ]
on_key: >
BufNew(14)
BufEnter(14)
  new Mode(n:14)
Trigger(add) Mode(n:14) ' " ` z= g` g' z <C-W> [ <Space> g ]
on_key: ?
BufNew(15)
BufNew(16)
on_key: A
BufEnter(14)
on_key: >
BufEnter(12)
on_key: <lt>
BufEnter(14)
on_key: ?
BufNew(17)
BufNew(18)
on_key: g
on_key: c
on_key: <Esc>
BufEnter(14)
on_key: g
State(start): Mode(n:0) Node(g) { keys = "g" }
  update Mode(n:14)
  continue: g Mode(n:14)
  getchar
  Trigger(del) Mode(n:14) z=
  on_key: c
  got: c
  suspend: Mode(n:14)
  Trigger(del) Mode(n:14) ' g` g' <C-W> [ g ] ` "
  feedkeys: Mode(n:14) gc
on_key: gc
BufNew(21)
BufNew(22)
ModeChanged(n:i)
  new Mode(i:21)
  Safe(true)
Trigger(add) Mode(i:21) <C-R>
Trigger(add) Mode(n:14) ` ' " g' g` [ <C-W> g ]
on_key: A
on_key: d
on_key: d
on_key: <Space>
on_key: a
on_key: l
on_key: t
on_key: e
on_key: r
on_key: n
on_key: a
on_key: t
on_key: e
on_key: <Space>
on_key: w
on_key: i
on_key: n
on_key: d
on_key: o
on_key: w
on_key: <Space>
on_key: k
on_key: e
on_key: y
on_key: b
on_key: i
on_key: n
on_key: d
on_key: i
on_key: n
on_key: g
on_key: <CR>
BufEnter(14)
  new Mode(i:14)
ModeChanged(i:n)
  Safe(true)
Trigger(add) Mode(i:14) <C-R>
BufNew(23)
BufNew(24)
BufEnter(23)
  new Mode(n:23)
Trigger(add) Mode(n:23) ' " ` z= g` g' z <C-W> [ <Space> g ]
on_key: <CR>
BufEnter(14)
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: j
on_key: k
on_key: j
on_key: >
BufEnter(12)
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>e
ModeChanged(n:c)
  new Mode(c:12)
  Unsafe(pending "N")
  suspend: Mode(c:12)
ModeChanged(c:n)
  cooldown
BufEnter(1)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:1)
  continue: <Space> Mode(n:1)
  getchar
  on_key: e
  got: e
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ' " ` z= g` g' z <C-W> [ <Space> g ]
  feedkeys: Mode(n:1) <Space>e
on_key: <Space>e
ModeChanged(n:c)
  new Mode(c:1)
  Unsafe(pending "N")
  suspend: Mode(c:1)
ModeChanged(c:n)
  cooldown
BufNew(27)
BufEnter(27)
  new Mode(n:27)
BufEnter(27)
Trigger(add) Mode(n:1) ' " ` z= g' g` z <C-W> [ <Space> g ]
Trigger(add) Mode(n:27) ' " ` z= g` g' z <C-W> [ <Space> g ]
Trigger(add) Mode(c:1) <C-R>
on_key: <Space>e
ModeChanged(n:c)
  new Mode(c:27)
  Unsafe(pending "N")
  suspend: Mode(c:27)
ModeChanged(c:n)
  cooldown
BufEnter(1)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:1)
  continue: <Space> Mode(n:1)
  getchar
  on_key: e
  got: e
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ' " ` z= g` g' z <C-W> [ <Space> g ]
  feedkeys: Mode(n:1) <Space>e
on_key: <Space>e
ModeChanged(n:c)
  Unsafe(pending "N")
  suspend: Mode(c:1)
  Trigger(del) Mode(c:1) <C-R>
ModeChanged(c:n)
  cooldown
BufNew(30)
BufEnter(30)
  new Mode(n:30)
BufEnter(30)
Trigger(add) Mode(n:1) ' " ` z= g' g` z <C-W> [ <Space> g ]
Trigger(add) Mode(n:30) ' " ` z= g` g' z <C-W> [ <Space> g ]
Trigger(add) Mode(c:1) <C-R>
on_key: <Space>e
ModeChanged(n:c)
  new Mode(c:30)
  Unsafe(pending "N")
  suspend: Mode(c:30)
ModeChanged(c:n)
  cooldown
BufEnter(1)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:1)
  continue: <Space> Mode(n:1)
  getchar
  on_key: e
  got: e
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ' " ` z= g` g' z <C-W> [ <Space> g ]
  feedkeys: Mode(n:1) <Space>e
on_key: <Space>e
ModeChanged(n:c)
  Unsafe(pending "N")
  suspend: Mode(c:1)
  Trigger(del) Mode(c:1) <C-R>
ModeChanged(c:n)
  cooldown
BufNew(33)
BufEnter(33)
  new Mode(n:33)
BufEnter(33)
Trigger(add) Mode(n:1) ' " ` z= g' g` z <C-W> [ <Space> g ]
Trigger(add) Mode(c:1) <C-R>
Trigger(add) Mode(n:33) ' " ` z= g` g' z <C-W> [ <Space> g ]
on_key: <Space>e
ModeChanged(n:c)
  new Mode(c:33)
  Unsafe(pending "N")
  suspend: Mode(c:33)
ModeChanged(c:n)
  cooldown
BufEnter(1)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:1)
  continue: <Space> Mode(n:1)
  getchar
  on_key: e
  got: e
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ' " ` z= g` g' z <C-W> [ <Space> g ]
  feedkeys: Mode(n:1) <Space>e
on_key: <Space>e
ModeChanged(n:c)
  Unsafe(pending "N")
  suspend: Mode(c:1)
  Trigger(del) Mode(c:1) <C-R>
ModeChanged(c:n)
  cooldown
BufNew(36)
BufEnter(36)
  new Mode(n:36)
BufEnter(36)
Trigger(add) Mode(n:1) ' " ` z= g' g` z <C-W> [ <Space> g ]
Trigger(add) Mode(n:36) ' " ` z= g` g' z <C-W> [ <Space> g ]
Trigger(add) Mode(c:1) <C-R>
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: j
on_key: k
on_key: j
on_key: <Space>
on_key: e
on_key: ?
BufNew(37)
BufNew(38)
on_key: e
BufEnter(36)
on_key: k
on_key: j
on_key: k
on_key: j
on_key: k
on_key: <Space>
on_key: <Space>
on_key: <Space>
on_key: <Space>
on_key: <Space>
on_key: <Space>
on_key: <Space>
on_key: <Space>
on_key: o
BufNew(39)
BufNew(40)
on_key: <Esc>
BufEnter(36)
on_key: k
on_key: j
on_key: <CR>
BufEnter(1)
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:1)
  continue: <Space> Mode(n:1)
  getchar
  on_key: e
  got: e
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ' " ` z= g` g' z <C-W> [ <Space> g ]
  feedkeys: Mode(n:1) <Space>e
on_key: <Space>e
ModeChanged(n:c)
  Unsafe(pending "N")
  suspend: Mode(c:1)
  Trigger(del) Mode(c:1) <C-R>
ModeChanged(c:n)
  cooldown
Trigger(add) Mode(n:1) ' " ` z= g' g` z <C-W> [ <Space> g ]
Trigger(add) Mode(c:1) <C-R>
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:1)
  continue: <Space> Mode(n:1)
  getchar
  on_key: e
  got: e
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ' " ` z= g` g' z <C-W> [ <Space> g ]
  feedkeys: Mode(n:1) <Space>e
on_key: <Space>e
ModeChanged(n:c)
  Unsafe(pending "N")
  suspend: Mode(c:1)
  Trigger(del) Mode(c:1) <C-R>
ModeChanged(c:n)
  cooldown
BufNew(45)
BufEnter(45)
  new Mode(n:45)
BufEnter(45)
Trigger(add) Mode(n:1) ' " ` z= g' g` z <C-W> [ <Space> g ]
Trigger(add) Mode(c:1) <C-R>
Trigger(add) Mode(n:45) ' " ` z= g` g' z <C-W> [ <Space> g ]
on_key: <Space>
on_key: e
on_key: <Space>
on_key: e
on_key: <Space>e
ModeChanged(n:c)
  new Mode(c:45)
  Unsafe(pending "N")
  suspend: Mode(c:45)
ModeChanged(c:n)
  cooldown
BufEnter(1)
on_key: j
on_key: j
on_key: j
on_key: j
on_key: j
on_key: j
on_key: j
on_key: j
on_key: j
on_key: j
on_key: w
on_key: w
on_key: w
on_key: w
on_key: w
on_key: w
on_key: a
ModeChanged(n:i)
  new Mode(i:1)
  Safe(true)
Trigger(add) Mode(i:1) <C-R>
on_key: <BS>
on_key: 1
on_key: 5
on_key: <Esc>
ModeChanged(i:n)
  Safe(true)
on_key: :
ModeChanged(n:c)
  Safe(true)
on_key: w
BufNew(46)
on_key: <CR>
ModeChanged(c:n)
  Unsafe(command-mode)
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ' " ` z= g` g' z <C-W> [ <Space> g ]
Trigger(add) Mode(n:1) ' " ` z= g' g` z <C-W> [ <Space> g ]
on_key: <Space>
State(start): Mode(n:0) Node(<Space>) { keys = "<Space>" }
  update Mode(n:1)
  continue: <Space> Mode(n:1)
  getchar
  on_key: w
  got: w
  continue: <Space>w Mode(n:1)
  getchar
  on_key: q
  got: q
  suspend: Mode(n:1)
  Trigger(del) Mode(n:1) ' " ` z= g` g' z <C-W> [ <Space> g ]
  feedkeys: Mode(n:1) <C-W>q
on_key: <C-W>
on_key: q
Trigger(add) Mode(n:1) ' " ` z= g' g` z <C-W> [ <Space> g ]
